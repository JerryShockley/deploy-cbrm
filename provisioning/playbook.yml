---
- hosts: all
  gather_facts: false
  become: true

  vars_files:
    - vars/vault.yml
    - vars/main.yml
  roles:
    # This must run before role edit_inventory file as the username
    # for logging is changed from the default root to privileged_user.
    - role: jerryshockley.secure_ssh
      vars:
        users:
          - name: "{{ privileged_user }}"
            sys_password: "{{ vault_privileged_user_sys_password }}"
            ssh_key_file: "~/.ssh/id_rsa.pub"
          - name: "{{ app_user }}"
            sys_password: "{{ vault_app_user_sys_password }}"
      when: ansible_user != 'vagrant'

  # Update ansible_user in hosts file to match the privileged
  # user set by role: jerryshockley.secure_ssh.

- hosts: localhost
  connection: localhost
  gather_facts: false

  roles:
    - role: jerryshockley.edit_inventory_file
      when: ansible_user != 'vagrant'
      vars:
        host_user: "{{ privileged_user }}"
        host_file: "{{ inventory_file }}"

  vars_files:
    - vars/vault.yml
    - vars/main.yml
    - vars/digital_ocean.yml

- hosts: all
  become: true
  vars_files:
    - vars/vault.yml
    - vars/main.yml

  roles:
    - geerlingguy.git
    - jasonheecs.ubuntu-fail2ban
    - weareinteractive.nodejs


  tasks:

    - name: Install OS utility packages.
      apt:
        name: "{{ item }}"
        state: present
        cache_valid_time: 7200
      loop:
        - acl # Install setfacl support for Ansible installs.
        - apt-transport-https
        - ca-certificates
        - build-essential
        - gnupg2

    - name: Include vagrant variables.
      include_vars:
        file: vars/vagrant_vars.yml
      when: ansible_user == 'vagrant'

    - name: Include non-vagrant variables.
      include_vars:
        file: vars/nonvagrant_vars.yml
      when: ansible_user != 'vagrant'

    - name: Install updated npm.
      ansible.builtin.command: npm install -g npm@{{ npm_version }}
      become: true

    - name: Install global npm tool packages.
      community.general.npm:
        name: "{{ item.name }}"
        version: "{{ item.version }}"
        global: true
      become: true
      loop: "{{ global_node_packages }}"

    - name: Include weareinteractive.ufw role
      import_role:
        name: weareinteractive.ufw

    - name: Include PostgreSQL role.
      import_role:
        name: geerlingguy.postgresql

    - name: Assign app_user as owner of app db.
      postgresql_owner:
        db: "{{ db_name }}"
        new_owner: "{{ app_user }}"
        obj_type: database
      become: true
      become_user: postgres

    # - name: Create www root dir.
    #   file:
    #     path: "{{ www_root_dir }}"
    #     mode: 0600
    #     group: "{{ app_user }}"
    #     owner: "{{ app_user }}"
    #     state: directory

  # Deploy application
- import_playbook: deploy.yml
